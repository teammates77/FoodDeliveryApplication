
Application.properties:-

spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_DATABASE:FoodApp}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:root}



#ORM s/w specific properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false


POM:-

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.AddressService</groupId>
	<artifactId>AddressService</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>AddressService</name>
	<description>Address Micro Service</description>
	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2022.0.2</spring-cloud.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-security</artifactId>-->
		<!--		</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-loadbalancer</artifactId>
</dependency>

		<!--		<dependency>-->
		<!--			<groupId>org.springframework.security</groupId>-->
		<!--			<artifactId>spring-security-test</artifactId>-->
		<!--			<scope>test</scope>-->
		<!--		</dependency>-->
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>


API GATEWAY-
spring:
 application:
    name: FoodAPIGateway
 cloud:
    gateway:
      routes:
        - id: ADDRESS-SERVICE
          uri: http://localhost:8087
          predicates:
            - Path=/fooddelivery/address/**
        - id: CATEGORY-SERVICE
          uri: http://localhost:8085
          predicates:
            - Path=/fooddelivery/category/**
        - id: RESTAURANT-SERVICE
          uri: http://localhost:8082
          predicates:
            - Path=/fooddelivery/restaurant/**
            - Path=/fooddelivery/items/**
        - id: FOODCART-SERVICE
          uri: http://localhost:8084
          predicates:
            - Path=/fooddelivery/foodcart/**
        - id: ORDER-SERVICE
          uri: http://localhost:8083
          predicates:
            - Path=/fooddelivery/orderdetails/**
server:
 port: 9191
eureka:
 instance:
    client:
      serviceUrl:
        defaultZone:  http://localhost:8761/eure
 endpoints:
    web:
      exposure:
        include: "*"


